import 'package:management_side/src/features/books/domain/models/book_model.dart';
import 'package:management_side/src/features/books/domain/models/book_enums.dart';
import 'package:management_side/src/features/loans/domain/models/loan_model.dart';
import 'package:management_side/src/features/users/domain/models/user_model.dart';

// Mock Books
final Book mockBook1 = Book(
  id: '101',
  title: 'Flutter in Action',
  isbn: '9781617296147',
  author: 'Eric Windmill',
  publisher: 'Manning Publications',
  publicationYear: 2020,
  edition: '2nd Edition',
  description: 'A comprehensive guide to Flutter development',
  coverImageUrl: 'https://m.media-amazon.com/images/I/71Hx0A4sYjL._AC_UF1000,1000_QL80_.jpg',
  totalCopies: 5,
  availableCopies: 3,
  type: BookType.physical,
  source: BookSource.purchased,
  categories: ['Programming', 'Mobile Development'],
  subjects: ['Flutter', 'Dart', 'Mobile Apps'],
  ddc: '005.2762', // Dewey Decimal Classification for Mobile App Development
  location: 'Main Library',
  shelf: 'CS-2-15',
  accessNumbers: ['CS-2020-001', 'CS-2020-002', 'CS-2020-003', 'CS-2020-004', 'CS-2020-005'],
  rating: 4.5,
  createdAt: DateTime.now().subtract(const Duration(days: 100)),
  updatedAt: DateTime.now().subtract(const Duration(days: 10)),
);

final Book mockBook2 = Book(
  id: '102',
  title: 'Dart in Action',
  isbn: '9781617294525',
  author: 'Manning Publications',
  publisher: 'Manning',
  publicationYear: 2019,
  edition: '1st Edition',
  description: 'A comprehensive guide to Dart programming',
  coverImageUrl: 'https://m.media-amazon.com/images/I/61tqaojhlnL._AC_UF1000,1000_QL80_.jpg',
  totalCopies: 3,
  availableCopies: 1,
  type: BookType.physical,
  source: BookSource.purchased,
  categories: ['Programming', 'Dart'],
  subjects: ['Dart', 'Programming Languages', 'Software Development'],
  ddc: '005.133', // Dewey Decimal Classification for Programming Languages
  location: 'Main Library',
  shelf: 'CS-3-10',
  accessNumbers: ['CS-2019-101', 'CS-2019-102', 'CS-2019-103'],
  rating: 4.2,
  createdAt: DateTime.now().subtract(const Duration(days: 200)),
  updatedAt: DateTime.now().subtract(const Duration(days: 20)),
);

final Book mockBook3 = Book(
  id: '103',
  title: 'Clean Code: A Handbook of Agile Software Craftsmanship',
  isbn: '9780132350884',
  author: 'Robert C. Martin',
  publisher: 'Pearson',
  publicationYear: 2008,
  edition: '1st Edition',
  description: 'Even bad code can function. But if code isn\'t clean, it can bring a development organization to its knees.',
  coverImageUrl: 'https://m.media-amazon.com/images/I/41xShlnTZTL._SX376_BO1,204,203,200_.jpg',
  totalCopies: 4,
  availableCopies: 2,
  type: BookType.physical,
  source: BookSource.purchased,
  categories: ['Programming', 'Software Engineering'],
  subjects: ['Clean Code', 'Best Practices', 'Software Development'],
  ddc: '005.1', // Dewey Decimal Classification for Computer Programming
  location: 'Main Library',
  shelf: 'CS-1-05',
  accessNumbers: ['CS-2008-051', 'CS-2008-052', 'CS-2008-053', 'CS-2008-054'],
  rating: 4.7,
  createdAt: DateTime.now().subtract(const Duration(days: 300)),
  updatedAt: DateTime.now().subtract(const Duration(days: 15)),
);

// Mock Users
final User mockUser1 = User(
  id: 'user1',
  firstName: 'John',
  lastName: 'Doe',
  email: 'john.doe@isbat.edu',
  rollNumber: 'STD2023001',
  phoneNumber: '+256701234567',
  profileImageUrl: 'https://ui-avatars.com/api/?name=John+Doe&background=random',
  dateOfBirth: DateTime(2000, 5, 15),
  createdAt: DateTime.now().subtract(const Duration(days: 365)),
  updatedAt: DateTime.now().subtract(const Duration(days: 5)),
  isActive: true,
  joinDate: DateTime.now().subtract(const Duration(days: 365)),
  expiryDate: DateTime.now().add(const Duration(days: 365)),
  borrowedBooks: {
    'Flutter in Action': DateTime.now().add(const Duration(days: 7)),
  },
);

final User mockUser2 = User(
  id: 'user2',
  firstName: 'Jane',
  lastName: 'Smith',
  email: 'jane.smith@isbat.edu',
  rollNumber: 'STD2023002',
  phoneNumber: '+256712345678',
  profileImageUrl: 'https://ui-avatars.com/api/?name=Jane+Smith&background=random',
  dateOfBirth: DateTime(2001, 3, 22),
  createdAt: DateTime.now().subtract(const Duration(days: 300)),
  updatedAt: DateTime.now().subtract(const Duration(days: 2)),
  isActive: true,
  joinDate: DateTime.now().subtract(const Duration(days: 300)),
  expiryDate: DateTime.now().add(const Duration(days: 365)),
  borrowedBooks: {
    'Dart in Action': DateTime.now().add(const Duration(days: 3)),
  },
);

final User mockUser3 = User(
  id: 'user3',
  firstName: 'Michael',
  lastName: 'Johnson',
  email: 'michael.johnson@isbat.edu',
  rollNumber: 'STD2023003',
  phoneNumber: '+256723456789',
  profileImageUrl: 'https://ui-avatars.com/api/?name=Michael+Johnson&background=random',
  dateOfBirth: DateTime(1999, 8, 10),
  createdAt: DateTime.now().subtract(const Duration(days: 400)),
  updatedAt: DateTime.now().subtract(const Duration(days: 1)),
  isActive: false,
  joinDate: DateTime.now().subtract(const Duration(days: 400)),
  expiryDate: DateTime.now().subtract(const Duration(days: 10)),
  borrowedBooks: {
    'Clean Code': DateTime.now().add(const Duration(days: 1)),
  },
);

// Mock Loans
final List<Loan> mockLoans = [
  Loan(
    id: 'LN-${DateTime.now().year}-0001',
    book: mockBook1,
    user: mockUser1,
    borrowedDate: DateTime.now().subtract(const Duration(days: 15)),
    dueDate: DateTime.now().add(const Duration(days: 15)),
    status: LoanStatus.borrowed,
    fineAmount: 0.0,
    notes: 'For Mobile Development course project',
    accessNumber: 'CS-2020-001',
    createdAt: DateTime.now().subtract(const Duration(days: 15)),
    updatedAt: DateTime.now().subtract(const Duration(days: 15)),
  ),
  Loan(
    id: 'LN-${DateTime.now().year}-0002',
    book: mockBook2,
    user: mockUser2,
    borrowedDate: DateTime.now().subtract(const Duration(days: 30)),
    dueDate: DateTime.now().subtract(const Duration(days: 5)),
    status: LoanStatus.overdue,
    fineAmount: 25.0,
    notes: 'For Programming Languages assignment',
    accessNumber: 'CS-2019-101',
    createdAt: DateTime.now().subtract(const Duration(days: 30)),
    updatedAt: DateTime.now(),
  ),
  Loan(
    id: 'LN-${DateTime.now().year}-0003',
    book: mockBook1,
    user: mockUser2,
    borrowedDate: DateTime.now().subtract(const Duration(days: 10)),
    dueDate: DateTime.now().add(const Duration(days: 20)),
    status: LoanStatus.borrowed,
    fineAmount: 0.0,
    notes: 'For personal study',
    accessNumber: 'CS-2020-002',
    createdAt: DateTime.now().subtract(const Duration(days: 10)),
    updatedAt: DateTime.now().subtract(const Duration(days: 10)),
  ),
  Loan(
    id: 'LN-${DateTime.now().year}-0004',
    book: mockBook3,
    user: mockUser1,
    borrowedDate: DateTime.now().subtract(const Duration(days: 45)),
    dueDate: DateTime.now().subtract(const Duration(days: 15)),
    returnedDate: DateTime.now().subtract(const Duration(days: 5)),
    status: LoanStatus.returned,
    fineAmount: 50.0,
    notes: 'For Software Engineering course',
    accessNumber: 'CS-2008-051',
    createdAt: DateTime.now().subtract(const Duration(days: 45)),
    updatedAt: DateTime.now().subtract(const Duration(days: 5)),
  ),
  Loan(
    id: 'LN-${DateTime.now().year}-0005',
    book: mockBook3,
    user: mockUser3,
    borrowedDate: DateTime.now().subtract(const Duration(days: 5)),
    dueDate: DateTime.now().add(const Duration(days: 25)),
    status: LoanStatus.borrowed,
    accessNumber: 'CS-2008-052',
    fineAmount: 0.0,
    notes: 'For final year project',
    createdAt: DateTime.now().subtract(const Duration(days: 5)),
    updatedAt: DateTime.now().subtract(const Duration(days: 5)),
  ),
];
